{
    "version": "2.0.0",
    "tasks": [
      {
        "label": "[custom] cmake: configure",       // 任务名称（用户可见）
        "type": "shell",                            // 任务类型（shell 表示在终端中运行）
        "command": "cmd.exe",                          // 使用 cmd.exe 作为命令行解释器
        "args": [
          "/c",                                     // 在命令后添加 /c 以执行命令
          "call \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat\" && cmake --preset ${input:cmakePreset} -B ${workspaceFolder}/build -DCMAKE_BUILD_TYPE=${input:buildType}" // 调用 vcvars64.bat 并执行 CMake 命令
        ],
        "options": {
          "cwd": "${workspaceFolder}",               // 工作目录设置为项目根目录
          "shell": {
            "executable": "cmd.exe",
            "args": ["/c"]
          }
        },
        "group": {                                  // 任务分组
          "kind": "build",                          // 属于 "build" 组
          "isDefault": true                         // 设为默认构建任务（可通过 Ctrl+Shift+B 触发）
        }
      },
      {
        "label": "[custom] cmake: build",           // 任务名称（用户可见）
        "type": "shell",                            // 任务类型
        "command": "cmd.exe",                          // 使用 cmd.exe 作为命令行解释器
        "args": [
          "/c",                                     // 在命令后添加 /c 以执行命令
          "call \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat\" && cmake --build ${workspaceFolder}/build --config ${input:buildType}" // 调用 vcvars64.bat 并执行构建命令
        ],
        "options": {
          "cwd": "${workspaceFolder}",               // 工作目录
          "shell": {
            "executable": "cmd.exe",
            "args": ["/c"]
          }
        },
        "group": "build"                            // 属于 "build" 组（非默认）
      },
      {
        "label": "[custom] vcpkg: download",        // 下载 vcpkg 任务
        "type": "shell",
        "command": "git clone git@github.com:microsoft/vcpkg.git && ${workspaceFolder}/vcpkg/bootstrap-vcpkg.bat",
        "options": {
          "shell": {
            "executable": "cmd.exe",
            "args": ["/d", "/c"]
          }
        },
        "group": "none",
        "problemMatcher": []
      },
      {
        "label": "[custom] vcpkg: initialize baseline",    // 初始化 vcpkg 基准线任务 
        "type": "shell", 
        "command": "${workspaceFolder}/vcpkg/vcpkg x-update-baseline --add-initial-baseline", 
        "options": {}, 
        "group": "none"
      }, 
      {
        "label": "[custom] vcpkg: update baseline",        // 更新 vcpkg 基准线任务
        "type": "shell",
        "command": "${workspaceFolder}/vcpkg/vcpkg x-update-baseline",
        "options": {
          "cwd": "${workspaceFolder}"
        },
        "group": "none",
        "problemMatcher": []
      },
      {
        "label": "[custom] vcpkg: install dependencies (command line)",  // 命令行方式安装依赖库任务
        "type": "shell",
        "command": "${workspaceFolder}/vcpkg/vcpkg",
        "args": [
          "install",
          "vulkan",
          "vulkan-memory-allocator",
          "vk-bootstrap",
          "sdl2",
          "glm",
          "fmt",
          "stb",
          "imgui[vulkan-binding,sdl2-binding]",
          "fastgltf",
          "--triplet",
          "${input:vcpkgTriplet}"
        ],
        "options": {
          "cwd": "${workspaceFolder}"
        },
        "group": "none",
        "problemMatcher": []
      },
      {
        "label": "[custom] vcpkg: install dependencies (manifest)",  // 清单模式安装依赖库任务
        "type": "shell",
        "command": "${workspaceFolder}/vcpkg/vcpkg",
        "args": [
          "install",
          "--triplet",
          "${input:vcpkgTriplet}"
        ],
        "options": {
          "cwd": "${workspaceFolder}"
        },
        "group": "none",
        "problemMatcher": []
      }
    ],
    "inputs": [                           // 定义动态输入参数
      {
        "id": "cmakePreset",              // 输入 ID（与任务中的 ${input:cmakePreset} 对应）
        "type": "pickString",             // 输入类型：下拉选择
        "description": "Select CMake Preset:",
        "options": ["windows-msvc", "windows-gcc", "windows-clang", "linux-clang", "macos-clang", "windows-msvc-ninja"], // 可选项
        "default": "windows-msvc"         // 默认值
      },
      {
        "id": "buildType",                // 输入 ID（构建类型）
        "type": "pickString",
        "description": "Select Build Type:",
        "options": ["Debug", "Release"],
        "default": "Debug"
      },
      {
        "id": "bootstrapScript",          // vcpkg 初始化脚本选择
        "type": "pickString",
        "description": "Select platform for vcpkg bootstrap:",
        "options": ["bat", "sh"],
        "default": "bat"
      },
      {
        "id": "vcpkgTriplet",             // vcpkg 平台三元组
        "type": "pickString",
        "description": "Select platform triplet for vcpkg:",
        "options": [
          "x64-windows", 
          "x64-windows-static",
          "x64-mingw-dynamic",
          "x64-linux", 
          "x64-osx", 
          "arm64-osx"
        ],
        "default": "x64-windows"
      }
    ]
  }